LINK --> https://leetcode.com/problems/subarray-sums-divisible-by-k/
CODE->
class Solution {
    public int subarraysDivByK(int[] nums, int k) {
        int n = nums.length, ans = 0;
        HashMap<Integer,Integer> mp = new HashMap<>();
        mp.put(0,1);   // zero's freq will be 1                
        int sum = 0, rem = 0;//coz initial sum will be zero
        for(int i =0;i<n;i++){
            sum += nums[i];
            rem = sum % k;
            if(rem < 0) rem += k; // if rem is -ve then add K
            if(mp.containsKey(rem)){
                ans += mp.get(rem);     //if same number repeats again then before updating it add it to the answer 
                mp.put(rem,mp.get(rem) + 1);
            }
            else
                mp.put(rem,1);
        }
        return ans;
    }
}
